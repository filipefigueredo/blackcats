###################################################################################################
#
# This github workflow implements integration tests which  validate that a newly introduced code 
# change doesn't break existing code. Whenever the code base is changed this workflow  will be 
# triggered
#
# Here are common examples of integration tests covered by this 
# workflow:
#    - Static code analysis tools such as lint and format.
#    - Run terraform validate to verify the syntax of the configuration file.
#    - Run terraform plan to ensure the configuration will work as expected.
#
###################################################################################################
name: Code validation - development

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths:
      - 'development/**'

jobs:
  # Generate kitchen's TF plan.
  
  code-validation:
    name: Validates resources code
    #uses: nmbrs/demo-gh-reusable-workflows/.github/workflows/terraform-fmt-validate-plan.template.yaml@master
    uses: ./.github/workflows/terraform-fmt-validate-plan.template.yaml
    with:
      target-directory: development
    secrets:
      key_vault_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      key_vault_name: ${{ secrets.AZURE_KEY_VAULT_NAME }}
    
  # Post a comment kitchen's TF plan.
  #post-pr-comment:
  #  name: Submit TF plan
  #  needs: resource-plan
  #  uses: nmbrs/demo-gh-reusable-workflows/.github/workflows/submit-pr-comment.template.yaml@yaml
  #  with:
  #    comment_text: |
  #      '#### Terraform Format and Style üñå\`${{ needs.kitchen-plan.outputs.formatStatus }}\`
  #       #### Terraform Initialization ‚öôÔ∏è\`${{ needs.kitchen-plan.outputs.initStatus }}\`
  #       #### Terraform Validation ü§ñ\`${{ needs.kitchen-plan.outputs.validationStatus }}\`
  #       #### Terraform Plan üìñ\`${{ needs.kitchen-plan.outputs.planStatus }}\`
  #
  #      <details><summary>Show Plan</summary>

  #        \`\`\`\n
  #        ${{ needs.kitchen-plan.outputs.planDetails }}
  #        \`\`\`

  #        </details>

  #        *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*'
