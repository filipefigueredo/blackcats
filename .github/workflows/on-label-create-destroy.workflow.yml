name: Create kitchen on demand

on:
  issues:
    types:
      - labeled

jobs:
  az-key-vault-secrets:
    name: Get Key Vault secrets

    runs-on: ubuntu-20.04

    # Map step outputs to a job output
    outputs:
      terraformApiToken: ${{ steps.getSecrets.outputs.terraformApiToken }}
    
    steps:
      # Azure login with SP credentials
      - name: Azure Login
        uses: Azure/login@v1 
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Retrieve secrects from Azure Key Vault
      - name: Get secrets from KV 
        uses: Azure/get-keyvault-secrets@v1
        with: 
          keyvault: ${{ secrets.AZURE_KEY_VAULT_NAME }}
          secrets: 'terraformApiToken'
        id: getSecrets

  # Apply Infrastructure configurations when a issue is labelled as "create".
  terraform-apply:
    name: Create / Apply changes to Azure Resources using Terraform
    runs-on: ubuntu-20.04
    needs: az-key-vault-secrets
    if: github.event.label.name == 'create'

    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v2

      # Retrieves the Terraform CLI used in the GitHub action workflow
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ needs.az-key-vault-secrets.outputs.terraformApiToken }}

      # Checks whether the repository has been properly formatted.
      # If it isn't properly formatted this step will produce an error.
      - name: Terraform Format
        run: terraform fmt -check

      # Initializes Terraform configurations.
      - name: Terraform Init
        run: terraform init

      # Applies terraform configuration.
      - name: Terraform Apply
        run: terraform apply -auto-approve
  
  # Apply Infrastructure configurations when a issue is labelled as "destroy".
  terraform-destroy:  
    name: Destroy Azure Resources using Terraform
    runs-on: ubuntu-20.04
    needs: az-key-vault-secrets
    if: github.event.label.name == 'destroy'

    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v2

      # Retrieves the Terraform CLI used in the GitHub action workflow
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ needs.az-key-vault-secrets.outputs.terraformApiToken }}

      # Initializes Terraform configurations.
      - name: Terraform Init
        run: terraform init

      # Destroys terraform configuration
      - name: Terraform Destroy
        run: terraform apply -destroy -auto-approve
