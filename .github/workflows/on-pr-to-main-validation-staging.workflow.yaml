###################################################################################################
#
# This github workflow implements integration tests which  validate that a newly introduced code
# change doesn't break existing code. Whenever the code base is changed this workflow  will be
# triggered
#
# Here are common examples of integration tests covered by this
# workflow:
#    - Static code analysis tools such as lint and format.
#    - Run terraform validate to verify the syntax of the configuration file.
#    - Run terraform plan to ensure the configuration will work as expected.
#
###################################################################################################

name: Code validation - staging environment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths:
      - "staging/**"

jobs:
  # Code linting checking, validation and resources plan
  code-validation:
    name: Code validation
    uses: nmbrs/demo-gh-reusable-workflows/.github/workflows/terraform-fmt-validate-plan.template.yaml@main
    with:
      target-directory: staging
    secrets:
      key_vault_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      key_vault_name: ${{ secrets.AZURE_KEY_VAULT_NAME }}

  # Static code analysis  scanning for security / compliance  issues
  security-compliance-analysis:
    name: Security / compliance static analysis
    uses: nmbrs/demo-gh-reusable-workflows/.github/workflows/terraform-checkov.template.yaml@main
    with:
      target-directory: staging
